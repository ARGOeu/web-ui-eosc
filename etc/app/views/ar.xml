<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd">
    <!-- 
        Project : argo-eosc 
        File    : ar.xml
        Created by cyril on 2018/06/13 
    -->
    <view name="ar-ngi" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology">NGI</argument>
        <argument name="nbmonths">4</argument>
        <argument name="filter">_filter_</argument>
        <argument name="month">1979-01</argument>
        <argument name="uri">_uri_</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('report-ar-groups',arguments())"/>
        </connector>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_pdf.html</parameter>
            </renderer>

            <renderer type="ChartRenderer">
            </renderer>
        </renderers>
    </view>

    <view name="report-ar-groups" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="topology"/>
        <argument name="nbmonths">4</argument>
        <argument name="filter">_filter_</argument>
        <argument name="month">1979-01</argument>
        <argument name="uri">_uri_</argument>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="start_time" eval="choose($month='1979-01',
    concat(str:replace(substring(date:add(date:date-time(),'-P5M'),0,20),' ','T'),'Z'),
    concat(str:replace(substring(date:add($month,'-P4M'),0,20),' ','T'),'Z'))"/>

        <variable name="end_time"
                  eval="concat(str:replace(substring(date:add($start_time,concat('P',5,'M')),0,20),' ','T'),'Z')"/>
        <variable name="url"
                  eval="concat(property('api.report'),'/',$report,'/',$topology,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=monthly')"/>

        <variable name="month_0" eval="substring($start_time,0,8)"/>
        <variable name="month_1"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',1,'M')),0,8),substring($start_time,0,8))"/>
        <variable name="month_2"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',2,'M')),0,8),substring(date:add($start_time,concat('P',1,'M')),0,8))"/>
        <variable name="month_3"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',3,'M')),0,8),substring(date:add($start_time,concat('P',2,'M')),0,8))"/>
        <variable name="month_4"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',4,'M')),0,8),substring(date:add($start_time,concat('P',3,'M')),0,8))"/>
        <variable name="month_5"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',5,'M')),0,8),substring(date:add($start_time,concat('P',4,'M')),0,8))"/>


        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"/>
        <processors>

            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>
                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>




            <element in="root">
                <attribute-create out="filter" if="$filter!='_filter_'">$filter</attribute-create>
                <element-create if="($tenant='egi' or $tenant='biomed' ) and $topology='SITES'" as="first-child">view('gocdb.filter')
                </element-create>
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element-ignore in="group" if="@type!=$topology">
                    <element/>
                </element-ignore>
                <element in="group" if="@type=$topology">
                    <element-ignore in="group" if="@type!=$topology"/>
                </element>
            </element>


            <element in="root">
                <attribute-create out="uri">$uri</attribute-create>
                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="month1">$month_1</attribute-create>
                <attribute-create out="month2">$month_2</attribute-create>
                <attribute-create out="month3">$month_3</attribute-create>
                <attribute-create out="month4">$month_4</attribute-create>
                <attribute-create out="month5">$month_5</attribute-create>
                <attribute-create out="start_date">substring($start_time,0,11)</attribute-create>
                <attribute-create out="end_date">substring($end_time,0,11)</attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
            </element>


            <element in="root">

                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>
                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>


            <element in="root" if="$tenant='egi' or $tenant='biomed'">
                <set variable="listSites">view('gocdb.site')</set>

                <element in="group" if="@type='SITES' and $filter!='_filter_'">
                    <attribute-create out="filters">
                        choose($listSites/results/SITE[@NAME=current()/../@name]/@filters,$listSites/results/SITE[@NAME=current()/../@name]/@filters,'NA')
                    </attribute-create>
                </element>

            </element>

            <element in="root" if="($tenant='egi' or $tenant='biomed') and $filter!='_filter_'">
                <element-ignore in="group" if="not(contains(@filters,concat(',',$filter,',')))"/>
            </element>


        </processors>


        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_pdf.html</parameter>
            </renderer>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
            <renderer type="ChartRenderer">
            </renderer>
        </renderers>

    </view>

    <view name="reportOpsPortal" xmlns:date="http://exslt.org/dates-and-times">
        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology">SITES</argument>
        <argument name="granularity">daily</argument>
        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>

        <variable name="start_time" eval="concat(substring(date:add(date:date-time(),'-P30D'), 0,11),'T00:00:00Z')"/>
        <variable name="end_time" eval="concat(substring(date:add(date:date-time(),'-P1D'), 0,11),'T00:00:00Z')"/>

        <variable name="url"
                  eval="concat(property('api.report'),'/',$report,'/',$topology,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=',$granularity)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>

        </connector>
        <serializer type="JSONStreamSerializer"/>
        <processors>
            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


        </processors>
    </view>

    <view name="cloud_reports"  xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology">SITES</argument>
        <argument name="filter">FedCloud</argument>
        <argument name="granularity">monthly</argument>
        <argument name="start_date"></argument>
        <argument name="end_date"></argument>
        <argument name="level">0</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('report-ar-dates',arguments())"></parameter>
        </connector>
    </view>

    <view name="report-ar-dates" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report">Critical</argument>
        <argument name="tenant"></argument>
        <argument name="topology">NGI</argument>
        <argument name="entity">_entity_</argument>
        <argument name="filter">_filter_</argument>

        <argument name="group">_group_</argument>
        <argument name="group2">_group2_</argument>


        <argument name="granularity">daily</argument>
        <argument name="start_date"></argument>
        <argument name="end_date"></argument>

        <argument name="uri">_uri_</argument>
        <argument name="level">_level_</argument>



        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="options"
                  eval="choose($group2!='_group2_',concat('/services/',$group2,'/endpoints'),'/services')"/>

        <variable name="start_time" eval="concat($start_date,'T00:00:00Z')"/>
        <variable name="end_time" eval="concat($end_date,'T23:59:59Z')"/>

        <variable name="url" eval="
        choose($level='_level_',
            concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=',$granularity),
                choose($level=0,
                    concat(property('api.report'),'/',$report,'/',$topology,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=',$granularity),
                    concat(property('api.report'),'/',$report,'/',$topology,'/',$group,$options,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=',$granularity)
        ))

        "/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>

        <serializer type="JSONStreamSerializer"></serializer>

        <processors>

            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


            <element in="root" if="$level!=0">
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element-ignore in="group" if="group">
                    <element-ignore in="group"
                                    if="@name!=$group and ancestor::group/@name!=$group or $group2!='_group2_' ">
                        <element/>
                    </element-ignore>
                    <element/>
                </element-ignore>
            </element>

            <element in="root" if="$level=0">
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element-ignore in="group" if="group"><element/></element-ignore>
            </element>


            <element in="root">

                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>

                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="start_date">$start_date</attribute-create>
                <attribute-create out="end_date">$end_date</attribute-create>
                <attribute-create out="uri">$uri</attribute-create>
                <attribute-create out="filter" if="$filter!='_filter_'">$filter</attribute-create>
            </element>


            <element in="root">

                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>
                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>

            <element in="root" if="@report='SLA'" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
                <set variable="endpoints" index="e:entry[@key='hostname']"> uniq(view('gocdb.endpoints')/e:entries/e:entries,"e:entry[@key='hostname']")</set>

                <element in="group" if="@type='endpoint'">
                    <attribute-create out="site">find($endpoints,../@name)/e:entry[@key='site']</attribute-create>

                </element>
            </element>


            <element in="root" if="$tenant='egi'">
                <set variable="listSites">view('gocdb.site')</set>
                <element in="group" if="@type='SITES' and $filter!='_filter_'">
                    <attribute-create out="filters">
                        choose($listSites/results/SITE[@NAME=current()/../@name]/@filters,$listSites/results/SITE[@NAME=current()/../@name]/@filters,'NA')
                    </attribute-create>
                </element>

            </element>

            <element in="root" if="$tenant='egi' and $filter!='_filter_'">
                <element-ignore in="group" if="not(contains(@filters,concat(',',$filter,',')))"/>
            </element>


        </processors>

        <pre-renderers>
            <row foreach="/root/group/results">
                <column label="group">ancestor::root/@group</column>
                <column label="name">ancestor::group/@name</column>
                <column label="timestamp">@timestamp</column>
                <column label="availability">@availability</column>
                <column label="reliability">@reliability</column>
                <column label="downtime">@downtime</column>
                <column label="uptime">@uptime</column>
                <column label="unknown">@unknown</column>
            </row>

        </pre-renderers>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report_daily.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_daily_pdf.html</parameter>
            </renderer>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="report-ar-endpoints" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">


        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="topology"/>
        <argument name="topology2"/>
        <argument name="month"/>
        <argument name="group"/>
        <argument name="group2">_group3_</argument>
        <argument name="group3">_group3_</argument>
        <argument name="uri">_uri_</argument>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>

        <variable name="start_time" eval="concat($month,'-01T00:00:00Z')"/>
        <variable name="end_time"
                  eval="concat(str:replace(substring(date:add($start_time,concat('P',1,'M')),0,20),' ','T'),'Z')"/>
        <variable name="url" eval="choose($group3='_group3_',
    concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'/',$topology2,'/',$group2,'/endpoints?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=daily'),
    concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'/',$topology2,'/',$group2,'/endpoints/',$group3,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=daily'))"/>

        <variable name="topology3"
                  eval="view('tenants.reports')/tenants/tenant/report[@tenant=$tenant][@report=$report]/@topology3"/>


        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"></serializer>

        <!--<connector type="StringConnector">-->
        <!--<parameter name="content" eval="$url"></parameter>-->
        <!--</connector>-->
        <!--<serializer type="EncapsulateSerializer"/>-->
        <processors>
            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="root">
                <attribute-create out="details">3</attribute-create>
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>

                <attribute-create out="uri">$uri</attribute-create>

                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>

            </element>

            <element in="root">


                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>
                <attribute-create out="month">$month</attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="topology2">$topology2</attribute-create>
                <attribute-create out="topology3">$topology3</attribute-create>
                <attribute-create out="group2" if="$group2!='_group2_'">$group2</attribute-create>
                <attribute-create out="group3" if="$group3!='_group3_'">$group3</attribute-create>
                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>
                <attribute-create out="start_date">substring($start_time,0,11)</attribute-create>
                <attribute-create out="end_date">substring($end_time,0,11)</attribute-create>
            </element>

            <element in="root">
                <element-ignore in="group">
                    <element-ignore in="group">
                        <element/>
                    </element-ignore>
                </element-ignore>
            </element>


            <element in="root">
                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>


        </processors>


        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report_daily.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_daily_pdf.html</parameter>
            </renderer>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="report-ar-group" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology"/>
        <argument name="entity">_entity_</argument>
        <argument name="month"/>
        <argument name="group"/>
        <argument name="group2">_group2_</argument>
        <argument name="details">_details_</argument>

        <argument name="uri">_uri_</argument>

        <variable name="options"
                  eval="choose($details='_details_',concat('/services/',$details,'/endpoints'),'/services')"/>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>

        <variable name="start_time" eval="concat($month,'-01T00:00:00Z')"/>
        <variable name="end_time"
                  eval="concat(str:replace(substring(date:add($start_time,concat('P',1,'M')),0,20),' ','T'),'Z')"/>

        <variable name="url" eval="choose($details='_details_',
        concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=daily'),
        concat(property('api.report'),'/',$report,'/',$topology,'/',$group,$options,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=daily'

        ))"/>




        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"></serializer>


        <processors>

            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


            <element in="root">
                <element-ignore in="group" if="@type!=$topology">
                    <element/>
                </element-ignore>
            </element>




            <element in="root">
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element-ignore in="group" if="group">
                    <element-ignore in="group" if="@name!=$group and ancestor::group/@name!=$group"/>
                    <element/>
                </element-ignore>
            </element>

            <element in="root" if="$group2!='_group2_'">
                <element-ignore in="group" if="@name!=$group2"/>
            </element>


            <element in="root">
                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>

                <attribute-create out="month">$month</attribute-create>
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="start_date">substring($start_time,0,11)</attribute-create>
                <attribute-create out="end_date">substring($end_time,0,11)</attribute-create>
                <attribute-create out="uri">$uri</attribute-create>
            </element>


            <element in="root">


                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>

        </processors>


        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report_daily.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_daily_pdf.html</parameter>
            </renderer>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="report-ar-group-details" xmlns:date="http://exslt.org/dates-and-times"
          xmlns:str="http://exslt.org/strings">


        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="topology"/>
        <argument name="nbmonths">5</argument>
        <argument name="group"/>
        <argument name="topology3">_topo3_</argument>
        <argument name="month">1979-01</argument>
        <argument name="uri">_uri_</argument>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>


        <variable name="topology2"
                  eval="view('tenants.reports')/tenants/tenant/report[@tenant=$tenant][@report=$report]/@topology3"/>


        <variable name="start_time" eval="choose($month='1979-01',
    concat(str:replace(substring(date:add(date:date-time(),'-P5M'),0,20),' ','T'),'Z'),
    concat(str:replace(substring(date:add($month,'-P4M'),0,20),' ','T'),'Z'))"/>


        <variable name="end_time"
                  eval="concat(str:replace(substring(date:add($start_time,concat('P',5,'M')),0,20),' ','T'),'Z')"/>


        <variable name="month_0" eval="substring($start_time,0,8)"/>
        <variable name="month_1"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',1,'M')),0,8),substring($start_time,0,8))"/>
        <variable name="month_2"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',2,'M')),0,8),substring(date:add($start_time,concat('P',1,'M')),0,8))"/>
        <variable name="month_3"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',3,'M')),0,8),substring(date:add($start_time,concat('P',2,'M')),0,8))"/>
        <variable name="month_4"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',4,'M')),0,8),substring(date:add($start_time,concat('P',3,'M')),0,8))"/>
        <variable name="month_5"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',5,'M')),0,8),substring(date:add($start_time,concat('P',4,'M')),0,8))"/>


        <variable name="url" eval="
        choose($topology3!='_topo3_',
        concat(property('api.report'),'/',$report,'/',$topology2,'/',$group,'/',$topology3,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=monthly'),
        concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'/',$topology2,'?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=monthly')
                )"/>


        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>

        </connector>

        <serializer type="JSONStreamSerializer"/>
        <processors>

            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                               <element-ignore in="endpoints">
                                   <element in="object" out="group">
                                       <attribute from-element="true" if="name()!='results'"/>
                                       <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                       <element-ignore in="results">
                                           <element in="object" out="results">
                                               <attribute from-element="true" />
                                           </element>
                                       </element-ignore>
                                   </element>

                               </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


            <element in="root">
                <attribute-create out="details" if="topology3='_topo3_'">1</attribute-create>
                <attribute-create out="details" if="topology3!='_topo3_'">2</attribute-create>
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="uri">$uri</attribute-create>
                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>

                <attribute-create out="start_date">substring($start_time,0,11)</attribute-create>
                <attribute-create out="end_date">substring($end_time,0,11)</attribute-create>
                <attribute-create out="month1">$month_1</attribute-create>
                <attribute-create out="month2">$month_2</attribute-create>
                <attribute-create out="month3">$month_3</attribute-create>
                <attribute-create out="month4">$month_4</attribute-create>
                <attribute-create out="month5">$month_5</attribute-create>
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>


            </element>

            <element in="root">


                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="topology2">$topology2</attribute-create>
                <attribute-create out="topology3">$topology3</attribute-create>


            </element>

            <element in="root">
                <element-ignore in="group" if="group">
                    <element-ignore in="group" if="@name!=$group and ancestor::group/@name!=$group"/>
                    <element/>
                </element-ignore>
            </element>


            <element in="root">

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>



        </processors>


        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_pdf.html</parameter>
            </renderer>


            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="report-ar-endpoint-details" xmlns:date="http://exslt.org/dates-and-times"
          xmlns:str="http://exslt.org/strings">


        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="topology"/>
        <argument name="nbmonths">5</argument>
        <argument name="group"/>
        <argument name="topology2"/>
        <argument name="group2"/>
        <argument name="group3">_group3_</argument>

        <argument name="month">1979-01</argument>
        <argument name="uri">_uri_</argument>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>


        <variable name="start_time" eval="choose($month='1979-01',
    concat(str:replace(substring(date:add(date:date-time(),'-P5M'),0,20),' ','T'),'Z'),
    concat(str:replace(substring(date:add($month,'-P4M'),0,20),' ','T'),'Z'))"/>

        <variable name="end_time"
                  eval="concat(str:replace(substring(date:add($start_time,concat('P',5,'M')),0,20),' ','T'),'Z')"/>


        <variable name="month_0" eval="substring($start_time,0,8)"/>
        <variable name="month_1"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',1,'M')),0,8),substring($start_time,0,8))"/>
        <variable name="month_2"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',2,'M')),0,8),substring(date:add($start_time,concat('P',1,'M')),0,8))"/>
        <variable name="month_3"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',3,'M')),0,8),substring(date:add($start_time,concat('P',2,'M')),0,8))"/>
        <variable name="month_4"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',4,'M')),0,8),substring(date:add($start_time,concat('P',3,'M')),0,8))"/>
        <variable name="month_5"
                  eval="choose($month='1979-01',substring(date:add($start_time,concat('P',5,'M')),0,8),substring(date:add($start_time,concat('P',4,'M')),0,8))"/>


        <variable name="topology3"
                  eval="view('tenants.reports')/tenants/tenant/report[@tenant=$tenant][@report=$report]/@topology3"/>
        <variable name="group4" eval="choose(
        $group3='_group3_',
        '/endpoints?start_time=',
        concat('/endpoints',$group3,'?start_time='))"></variable>
        <variable name="url"
                  eval="concat(property('api.report'),'/',$report,'/',$topology,'/',$group,'/',$topology2,'/',$group2,$group4,$start_time,'&amp;end_time=',$end_time,'&amp;granularity=monthly') "/>


        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"/>


        <processors>

            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


            <element in="root">
                <attribute-create out="details" if="topology3='_topo3_'">1</attribute-create>
                <attribute-create out="details" if="topology3!='_topo3_'">2</attribute-create>
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="ApiUrl">$url</attribute-create>
                <attribute-create out="uri">$uri</attribute-create>
                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>

                <attribute-create out="start_date">substring($start_time,0,11)</attribute-create>
                <attribute-create out="end_date">substring($end_time,0,11)</attribute-create>
                <attribute-create out="month1">$month_1</attribute-create>
                <attribute-create out="month2">$month_2</attribute-create>
                <attribute-create out="month3">$month_3</attribute-create>
                <attribute-create out="month4">$month_4</attribute-create>
                <attribute-create out="month5">$month_5</attribute-create>

                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>


            </element>

            <element in="root">


                <attribute-create out="level1">../report[@tenant=../@tenant][@report=../@report]/@thresholdAv
                </attribute-create>
                <attribute-create out="level2">../report[@tenant=../@tenant][@report=../@report]/@thresholdRe
                </attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="topology2">$topology2</attribute-create>


                <attribute-create out="group">str:replace($group,'+','%252B')</attribute-create>
                <attribute-create out="group2">$group2</attribute-create>

            </element>

            <element in="root">
                <element-ignore in="group">
                    <element-ignore in="group">
                        <element/>
                    </element-ignore>
                </element-ignore>
            </element>


            <element in="root">

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <element in="results">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>

            <!-- add site for sla report -->
            <element in="root" if="@report='SLA'" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
                <set variable="endpoints" index="e:entry[@key='hostname']"> uniq(view('gocdb.endpoints')/e:entries/e:entries,"e:entry[@key='hostname']")</set>

                <element in="group" if="@type='endpoint'">
                    <attribute-create out="site">find($endpoints,../@name)/e:entry[@key='site']</attribute-create>

                </element>
            </element>
        </processors>


        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_pdf.html</parameter>
            </renderer>

            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="report-ar" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="topology"/>
        <argument name="entity">_entity_</argument>
        <argument name="group">_group_</argument>
        <argument name="nbdays">30</argument>
        <argument name="uri">_uri_</argument>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="start_time"
                  eval="concat(str:replace(substring(date:add(date:date-time(),concat('-P',$nbdays,'D')),0,20),' ','T'),'Z')"/>
        <variable name="end_time" eval="concat(str:replace(substring(date:date-time(),0,20),' ','T'),'Z')"/>

        <variable name="url"
                  eval="choose($entity='_entity_',concat(property('api.report'),'/',$report,'/',$topology,'?start_time=',$start_time,'&amp;end_time=',$end_time),concat(property('api.report'),'/',$report,'/',$topology,'/',$entity,'?start_time=',$start_time,'&amp;end_time=',$end_time))"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"/>

        <processors>
            <element in="object" out="root" if="results/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='results'"/>
                        <element-ignore in="results">
                            <element in="object" out="results">
                                <attribute from-element="true"/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='endpoints'" />

                        <element-ignore in="endpoints">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='results'"/>
                                <element-ignore in="results">
                                    <element in="object" out="results">
                                        <attribute from-element="true" />
                                    </element>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="results/object/serviceflavors/object/endpoints/object/results">
                <element-ignore in="results">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='serviceflavors'" />

                        <element-ignore in="serviceflavors">
                            <element in="object" out="group">
                                <element-ignore in="endpoints">
                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='results'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="results">
                                            <element in="object" out="results">
                                                <attribute from-element="true" />
                                            </element>
                                        </element-ignore>
                                    </element>

                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>



            <element out="root">

                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="url">$url</attribute-create>
                <attribute-create out="uri">$uri</attribute-create>
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>

                <element-ignore in="group">
                    <element in="results">
                        <attribute-create out="id">../../@name</attribute-create>
                    </element>
                    <element-ignore in="group">
                        <element in="results">
                            <attribute-create out="id">../../@name</attribute-create>
                        </element>
                    </element-ignore>
                </element-ignore>
            </element>


            <element in="root">
                <element-ignore in="results"/>
                <element-create>sort_by_string(../results,'@timestamp')</element-create>
            </element>


            <element in="root">
                <element-create-as-parent out="group" group-by="@timestamp" attributes="@timestamp">
                    <element in="results"/>
                </element-create-as-parent>
            </element>

            <element in="root">
                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <attribute-create out="availability">sum(../results/@availability) div
                        (count(../results/@availability))
                    </attribute-create>
                    <attribute-create out="reliability">sum(../results/@reliability) div
                        (count(../results/@reliability))
                    </attribute-create>
                </element>
            </element>


            <element in="root">
                <attribute-create out="availability">sum(../group[@availability!='-1']/@availability) div (count(../group[@availability!='-1']/@availability))
                </attribute-create>
                <attribute-create out="reliability">sum(../group[@reliability!='-1']/@reliability) div (count(../group[@reliability!='-1']/@reliability))
                </attribute-create>
            </element>

            <element in="root" out="report-ar">

                <attribute in="availability">round(.*100) div 100</attribute>
                <attribute in="reliability">round(.*100) div 100</attribute>

                <element in="group">

                    <attribute in="availability">round(.*100) div 100</attribute>
                    <attribute in="reliability">round(.*100) div 100</attribute>
                    <element-ignore/>
                </element>
            </element>


        </processors>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report.html</parameter>
            </renderer>
            <renderer type="PDFRenderer">
                <parameter name="template">app/html/report-ar/report_pdf.html</parameter>
            </renderer>

            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

    
    <view name="report-all-endpoints" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">

        <!-- /results/{report_name}/endpoints?[start_time]&[end_time]&[granularity]&[pageSize]&[nextPageToken] -->
        <argument name="report"/>
        <argument name="tenant"/>
        <argument name="nbdays">2</argument>
        <argument name="granularity">daily</argument>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="start_time"
                  eval="choose($granularity='daily',concat(str:replace(substring(date:add(date:date-time(),concat('-P',$nbdays,'D')),0,20),' ','T'),'Z'),concat(str:replace(substring(date:add(date:date-time(),concat('-P',$nbdays,'M')),0,20),' ','T'),'Z'))"/>
        <variable name="end_time" eval="concat(str:replace(substring(date:date-time(),0,20),' ','T'),'Z')"/>

        <variable name="url"
                  eval="concat(property('api.report'),'/',$report,'/endpoints?start_time=',$start_time,'&amp;end_time=',$end_time,'&amp;granularity=',$granularity)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"/>

        <processors>

            <element in="object" out="root">

                <element-ignore in="results">
                    <element in="object" out="results">
                        <attribute from-element="true" if="name()!='results'"/>

                        <element-ignore>
                            <element in="object" out="result">
                                <attribute from-element="true"/>
                                <element-ignore/>
                            </element>
                        </element-ignore>
                    </element>
                </element-ignore>
            </element>

            <element in="root">
                <set variable="reportDetails">view('tenants.reports')/tenants/tenant[@id=$tenant]/report[@name=$report]</set>


                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="day1">../results[1][count(result)=3]/result[1]/@timestamp</attribute-create>
                <attribute-create out="day2">../results[1][count(result)=3]/result[2]/@timestamp</attribute-create>
                <attribute-create out="day3">../results[1][count(result)=3]/result[3]/@timestamp</attribute-create>
                <attribute-create out="level1">$reportDetails/@thresholdAv</attribute-create>
                <attribute-create out="level2">$reportDetails/@thresholdRe</attribute-create>
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element in="results">
                    <element in="result">
                        <attribute if="name()!='timestamp'">round(. * 100 ) div 100</attribute>
                    </element>
                </element>
            </element>

        </processors>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/report-ar/report_endpoints.html</parameter>
            </renderer>


            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>



</views>