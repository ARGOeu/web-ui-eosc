<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd">
    <!-- 
        Project : argo-eosc 
        File    : gocdb.xml
        Created by cyril on 2018/06/13 
    -->


    <view name="gocdb.services.group" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

        <argument name="name">EGI_D4SCIENCE_SLA</argument>
        <connector type="HTTPConnector">
            <parameter name="url" eval="property('gocdb.get_service_group')"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>
            <element in="results">
                <element-ignore in="SERVICE_GROUP" if="NAME/text()!=$name"/>
            </element>

            <element in="results">
                <set variable="endpoints" index="@PRIMARY_KEY">uniq(view('gocdb.endpoints')/e:entries/e:entries,'@PRIMARY_KEY')</set>
                <element in="SERVICE_GROUP">
                    <element in="SERVICE_ENDPOINT">
                        <element-create>find($endpoints,../@PRIMARY_KEY)/e:entry[@key='site']</element-create>
                    </element>
                    <element-ignore/>
                </element>
            </element>

            <element in="results">
                <element in="SERVICE_GROUP">
                    <element in="SERVICE_ENDPOINT">
                        <element in="e:entry" out="SITE">
                            <attribute-ignore/>
                        </element>
                        <element in="HOSTNAME"/>
                        <element in="SERVICE_TYPE"/>
                        <element-ignore/>
                        <element-create>new_element('service_endpoint',new_text(concat(../HOSTNAME/text(),'::',../SERVICE_TYPE/text(),'  ')))</element-create>
                    </element>

                </element>

            </element>
        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="gocdb.filter">
        <connector type="HTTPConnector">
            <parameter name="url" eval="property('gocdb.get_service_endpoint')"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>
            <element in="results" out="filter">
                <element-ignore in="SERVICE_ENDPOINT">
                    <element-ignore in="SCOPES">
                        <element in="SCOPE" out="scope"/>
                    </element-ignore>
                </element-ignore>
            </element>

            <element in="filter">
                <element-ignore in="scope"/>
                <element-create>uniq(../scope,'text()')</element-create>
            </element>

            <element in="filter">
                <element-create>view('gocdb.ngi')/ngis/*</element-create>
            </element>


        </processors>


        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">28</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="ViewCreatedTrigger"/>

        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="gocdb.ngi">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('gocdb.site')"/>
        </connector>

        <processors>
            <element in="results" out="ngis">
                <element-ignore in="SITE">
                    <element in="ROC" out="ngi"/>
                </element-ignore>

            </element>

            <element in="ngis">
                <element-ignore in="ngi"/>
                <element-create>uniq(../ngi,'text()')</element-create>
            </element>

        </processors>
    </view>


    <view name="gocdb.endpoints"  xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" >

        <connector type="HTTPConnector">
            <parameter name="url" eval="property('gocdb.get_service_endpoint')"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>

            <element in="results" out="e:entries">

                <element in="SERVICE_ENDPOINT" out="e:entries">
                    <element-create>entry('id',../@PRIMARY_KEY)</element-create>
                    <element-create>entry('hostname',../HOSTNAME/text())</element-create>
                    <element-create>entry('service',../SERVICE_TYPE/text())</element-create>
                    <element-create>entry('in_production',choose(../IN_PRODUCTION/text()='Y','1','0'))</element-create>
                    <element-create>entry('monitored',choose(../NODE_MONITORED/text()='Y','1','0'))</element-create>
                    <element-create>entry('endpoint',concat(../HOSTNAME/text(),'__',../SERVICE_TYPE/text()))</element-create>
                    <element-create>entry('link',join(../GOCDB_PORTAL_URL/text(),''))</element-create>
                    <element-create>entry('filter',concat(',',join(../SCOPES/SCOPE/text(),','),',',../ROC_NAME/text(),',',../SITENAME/text(),','))</element-create>
                    <element-create>entry('ngi',choose(../ROC_NAME/text(),../ROC_NAME/text(),'NA'))</element-create>
                    <element-create>entry('site',choose(../SITENAME/text(),../SITENAME/text(),'NA'))</element-create>
                    <element-ignore/>
                </element>
            </element>
        </processors>

        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="ViewCreatedTrigger"/>

        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>




    <view name="gocdb.sla.downtimes"  xmlns:date="http://exslt.org/dates-and-times" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:str="http://exslt.org/strings" >

        <variable name="start_time" eval="substring(date:add(date:date-time(),concat('-P',200,'D')),0,11)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('gocdb.get_downtime.site'),'&amp;startdate=',$start_time)"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>

            <element in="results" out="downtimes">
                <element-ignore/>
                <element-create>sort_by_string(../DOWNTIME,'@PRIMARY_KEY')</element-create>
            </element>

            <element in="downtimes">
                <element-create-as-parent out="downtimes"  group-by="@PRIMARY_KEY" attributes="@*">
                    <element in="DOWNTIME">
                        <element-create>new_element('service_endpoint',new_text(concat(../HOSTNAME/text(),'::',../SERVICE_TYPE/text(),'  ')))</element-create>
                    </element>
                </element-create-as-parent>
            </element>





            <element in="downtimes">
                <set variable="endpoints">view('gocdb.services.group',entry('name','EGI_D4SCIENCE_SLA'))/results/SERVICE_GROUP</set>
                <element in="downtimes">
                    <element-ignore in="DOWNTIME" if="not(service_endpoint/text()=$endpoints/SERVICE_ENDPOINT/service_endpoint/text())"/>
                </element>
            </element>

            <element in="downtimes">
                <element in="downtimes">
                    <element-create>new_element('service_endpoints',str:concat(../DOWNTIME/service_endpoint))</element-create>
                </element>
            </element>


            <element in="downtimes">
                <element-ignore in="downtimes">
                    <element in="DOWNTIME" if="not(preceding-sibling::DOWNTIME)">
                        <element-create>new_element('service_endpoints',../../service_endpoints/text())</element-create>
                    </element>
                </element-ignore>
            </element>



        </processors>

        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">8</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="ViewCreatedTrigger"/>

        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="gocdb.site"  xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" >

        <connector type="HTTPConnector">
            <parameter name="url" eval="property('gocdb.get_site')"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>


        <processors>
            <element in="results">
                <element-ignore in="SITE"/>
                <element-create>sort_by_string(../SITE,'@NAME')</element-create>
            </element>

            <element in="results">
                <element in="SITE">
                    <attribute-create out="filters">concat(',',join(../SCOPES/SCOPE/text(),','),',',../ROC/text(),',')</attribute-create>
                    <element if="contains(name(),'COUNTRY')">
                        <text>lower-case(.)</text>
                    </element>
                </element>
            </element>



        </processors>



        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="ViewCreatedTrigger"/>

        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="gocdb.sdc.site"  xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" >

        <connector type="HTTPConnector">
            <parameter name="url" eval="property('gocdb.sdc.get_site')"/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>


        <processors>
            <element in="results">
                <element-ignore in="SITE"/>
                <element-create>sort_by_string(../SITE,'@NAME')</element-create>
            </element>

            <element in="results">
                <element in="SITE">

                    <element if="contains(name(),'COUNTRY')">
                        <text>lower-case(.)</text>
                    </element>
                </element>
            </element>

        </processors>



        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="ViewCreatedTrigger"/>

        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="gocdb.downtimes.site"  xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:str="http://exslt.org/strings" xmlns:date="http://exslt.org/dates-and-times">

        <argument name="site"/>
        <variable name="start_time" eval="substring(date:add(date:date-time(),'-P365D'),0,20)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('gocdb.get_downtime.site'),'&amp;topentity=',$site,'&amp;startdate=',$start_time) "/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>

            <element in="results" out="downtimes">
                <element-ignore/>
                <element-create>sort_by_string(../DOWNTIME,'@PRIMARY_KEY')</element-create>
            </element>

            <element in="downtimes">
                <element-create-as-parent out="downtimes"  group-by="@PRIMARY_KEY" attributes="@*">
                    <element in="DOWNTIME">
                        <element-create>new_element('service_endpoint',new_text(concat(../HOSTNAME/text(),'::',../SERVICE_TYPE/text(),'  ')))</element-create>
                    </element>
                </element-create-as-parent>
            </element>



            <element in="downtimes">
                <element in="downtimes">
                    <element-create>new_element('service_endpoints',str:concat(../DOWNTIME/service_endpoint))</element-create>
                </element>
            </element>

            <element in="downtimes">
                <element-ignore in="downtimes">
                    <element in="DOWNTIME" if="not(preceding-sibling::DOWNTIME)">
                        <element-create>new_element('service_endpoints',../../service_endpoints/text())</element-create>
                    </element>
                </element-ignore>
            </element>




        </processors>



        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="gocdb.sdc.downtimes.site"  xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:str="http://exslt.org/strings" xmlns:date="http://exslt.org/dates-and-times">

        <argument name="site"/>
        <variable name="start_time" eval="substring(date:add(date:date-time(),'-P365D'),0,20)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('gocdb.sdc.get_downtime.site'),'&amp;topentity=',$site,'&amp;startdate=',$start_time) "/>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
        </connector>

        <processors>

            <element in="results" out="downtimes">
                <element-ignore/>
                <element-create>sort_by_string(../DOWNTIME,'@PRIMARY_KEY')</element-create>
            </element>

            <element in="downtimes">
                <element-create-as-parent out="downtimes"  group-by="@PRIMARY_KEY" attributes="@*">
                    <element in="DOWNTIME">
                        <element-create>new_element('service_endpoint',new_text(concat(../HOSTNAME/text(),'::',../SERVICE_TYPE/text(),'  ')))</element-create>
                    </element>
                </element-create-as-parent>
            </element>



            <element in="downtimes">
                <element in="downtimes">
                    <element-create>new_element('service_endpoints',str:concat(../DOWNTIME/service_endpoint))</element-create>
                </element>
            </element>

            <element in="downtimes">
                <element-ignore in="downtimes">
                    <element in="DOWNTIME" if="not(preceding-sibling::DOWNTIME)">
                        <element-create>new_element('service_endpoints',../../service_endpoints/text())</element-create>
                    </element>
                </element-ignore>
            </element>




        </processors>



        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

</views>