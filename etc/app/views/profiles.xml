<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">
    <!-- 
        Project : argo-eosc 
        File    : profiles.xml
        Created by cyril on 2019/04/16 
    -->


    <view name="metric_profiles">

        <argument name="id"/>
        <argument name="tenant"/>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="concat(property('api.profiles.metric'),'/',$id)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with metric profile: ',$id)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="aggregation_profiles">

        <argument name="id"/>
        <argument name="tenant"/>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="concat(property('api.profiles.aggregation'),'/',$id)"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with aggregation profile: ',$url)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="threshold_profiles"   xmlns:str="http://exslt.org/strings">

        <argument name="tenant"/>
        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="property('api.profiles.thresholds')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with threshold profile: ',$url)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>
        <serializer type="JSONStreamSerializer"/>

        <processors>
            <elements path="/object/data/object/rules/object">
                <element in="thresholds">
                    <text-ignore/>
                    <element-create>str:split(../text(),' ')</element-create>
                </element>
            </elements>

            <elements path="/object/data/object/rules/object">
                <element in="thresholds">
                    <element in="token" out="test">
                        <text-ignore/>
                        <element-create>str:split(../text(),';')</element-create>
                    </element>
                </element>
            </elements>

            <elements path="/object/data/object/rules/object">
                <element in="thresholds">
                    <element in="test">
                        <element in="token">
                            <text>str:replace(.,':',' to ')</text>
                        </element>
                    </element>
                </element>
            </elements>

        </processors>



        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>

</views>