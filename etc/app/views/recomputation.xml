<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">
    <!-- 
        Project : argo-eosc 
        File    : recomputation.xml
        Created by cyril on 2019/07/19 
    -->

    <view name="recomputationStatus" authenticators="aai">

        <argument name="tenant">egi</argument>
        <argument name="id"></argument>
        <argument name="status"></argument>



        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>

        <variable name="url" eval="choose($status='delete',concat(property('api.recomputation.list'),'/',$id),concat(property('api.recomputation.list'),'/',$id,'/status'))"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <parameter name="method" eval="choose($status='delete','DELETE','POST')"/>
            <parameter name="post" eval="choose($status='delete','{}',concat('{',quot('status'),': ',quot($status),'}'))"/>

            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with tenant: ',$tenant)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <processors>
            <element in="object" out="root">

<!--                <attribute-create out="tenant">$tenant</attribute-create>-->
<!--                <attribute-create out="report">'Critical'</attribute-create>-->
                <element-create>entry('token',user('token'))</element-create>
                <element-create>view('userInfo', entry('token',user('token')))</element-create>
                <element-create>view('recomputationListAPI',entry('tenant',$tenant))/root/*</element-create>
            </element>

            <element  in="root" if="object/eduperson_entitlement/item='urn:mace:egi.eu:group:argo#sso.egi.eu'">
                <element-create>view('tenants')</element-create>
            </element>

            <element in="root">

                <element-ignore in="tenants">
                    <element in="tenant">
                        <attribute-create out="name">../id/text()</attribute-create>

                        <element-create>view('recomputationListAPI',entry('tenant',../id/text()))</element-create>
                        <element-ignore/>
                    </element>

                </element-ignore>

            </element>

            <elements path="root/tenant">
                <elements-ignore path="root/data">
                    <element in="object" out="recomputation">
                        <element-create>new_element('uid',concat(ancestor::tenant/@name,count(../preceding-sibling::object)))</element-create>
                        <element-create>new_element('entity',join(../exclude/item,','))</element-create>
                    </element>
                </elements-ignore>
            </elements>

            <elements path="root/tenant">
                <element-ignore in="message"/>
            </elements>


        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="recomputationListAPI">

        <argument name="tenant">egi</argument>
        <argument name="id">_id_</argument>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="choose($id!='_id_',concat(property('api.recomputation.list'),'/',$id),property('api.recomputation.list'))"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with tenant: ',$tenant)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <processors>
            <element in="object" out="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">'Critical'</attribute-create>
                <element-ignore in="message"/>
            </element>
        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="recomputationList" authenticators="aai">

        <argument name="tenant"></argument>
        <argument name="report"></argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"/>
        </connector>

        <processors>
            <element in="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="view">'recomputationList'</attribute-create>

                <element-create>view('userInfo', entry('token',user('token')))</element-create>

            </element>

            <element in="root" if="object/eduperson_entitlement/item='urn:mace:egi.eu:group:argo#sso.egi.eu'">
                <element-create>view('tenants')</element-create>
            </element>

            <element in="root">

                <element-ignore in="tenants">
                    <element in="tenant">
                        <attribute-create out="name">../id/text()</attribute-create>

                        <element-create>view('recomputationListAPI',entry('tenant',../id/text()))</element-create>
                        <element-ignore/>
                    </element>

                </element-ignore>

            </element>

            <elements path="root/tenant">
                <elements-ignore path="root/data">
                    <element in="object" out="recomputation">
                        <element-create>new_element('uid',concat(ancestor::tenant/@name,count(../preceding-sibling::object)))</element-create>
                        <element-create>new_element('entity',join(../exclude/item,','))</element-create>
                    </element>
                </elements-ignore>
            </elements>

            <elements path="root/tenant">
                <element-ignore in="message"/>
            </elements>
        </processors>



        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation/recomputationList.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="recomputation" authenticators="aai">

        <argument name="tenant">egi</argument>
        <argument name="report">Critical</argument>
        <argument name="id">_id_</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"/>
        </connector>

        <processors>
            <element in="root">
                <attribute-create out="view">'recomputation'</attribute-create>
                <element-create>entry('token',user('token'))</element-create>
                <element-create>view('userInfo', entry('token',user('token')))</element-create>
            </element>

            <element in="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="update" if="$id!='_id_'">$id</attribute-create>
                <element in="object">
                    <element in="name"/>
                    <element in="email"/>
                    <element-ignore/>
                </element>
                <element-create>view('tenants.reports')/tenants/tenant[@id=$tenant]/report</element-create>
                <element-create if="$id!='_id_'">view('recomputationListAPI',entry('tenant',$tenant)|entry('id',$id))</element-create>
                <element-ignore/>
            </element>
        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation/recomputation.html</parameter>
            </renderer>
        </renderers>


    </view>


    <view name="form_recomputation_results"  xmlns:date="http://exslt.org/dates-and-times">




        <connector type="XMLConnector">
            <parameter name="content" eval="view('recomputationCreation',post())"/>
        </connector>



        <processors>
            <element in="object" out="root">

                <attribute-create out="tenant">post()/e:entry[@key='tenant']/text()</attribute-create>
                <attribute-create out="report">post()/e:entry[@key='report']/text()</attribute-create>
                <element-create>new_element('result',post())</element-create>



            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation/recomputation.html</parameter>
            </renderer>
        </renderers>

    </view>



    <view name="recomputationCreation" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

        <argument name="tenant"/>
        <argument name="report"/>
        <argument name="exclude"/>
        <argument name="start_time"/>
        <argument name="end_time"/>
        <argument name="reason"/>
        <argument name="name"/>
        <argument name="email"/>
        <argument name="entity"/>
        <argument name="baseUrl"/>
        <argument name="update">_update_</argument>


        <variable name="summary" eval="
        concat(
        'Requestor: '  ,$name, '(', $email, ')	&#10;',
        'Period: '  , $start_time, ' / ',$end_time, '&#10;',
        'Tenant: '  , $tenant, '&#10;',
        'Report: '  , $report, '&#10;',
        'Sites/ServiceGroups: '  , $entity, '&#10;',
        'Reason: '  , $reason, '&#10;'
        )"></variable>




        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="choose($update!='_update_',concat(property('api.recomputation.list'),'/',$update),property('api.recomputation.list'))"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <parameter name="method" eval="choose($update!='_update_','PUT','POST')"/>
            <parameter name="post" eval="concat('{',quot('report'),': ',quot($report),',',quot('requester_name'),': ',quot($name),',',quot('requester_email'),': ',quot($email),',',quot('exclude'),': [',$entity , '],', quot('reason'),': ',quot($reason),',',quot('start_time'),': ',quot($start_time),',',quot('end_time'),': ',quot($end_time),'}')"/>

            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with creation/update of the recomputation for tenant ',$tenant ,' and the url ', $url)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>



        <processors>

            <element in="object">
                    <element-create if="$update='_update_'">view('recomputation_email',entry('summary',$summary)|entry('cc',$email)|entry('id',../data/id/text())|entry('url',concat($baseUrl,'/recomputation/',$tenant,'/',../data/id/text() )))</element-create>
            </element>
        </processors>

    </view>

    <view name="recomputation_email">


        <argument name="summary"/>
        <argument name="id"/>
        <argument name="cc"/>



        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')">
            </parameter>
        </connector>


        <processors>

            <element  if="not(EmailSent)">
                <element-create>view('recomputation_SendEmail',
                    entry('id',$id)
                    |entry('url',$url)
                    |entry('cc',$cc)
                    |entry('summary',$summary))</element-create>
            </element>

        </processors>

    </view>

    <view name="recomputation_SendEmail" xmlns:java="http://software.in2p3.fr/lavoisier/java">

        <argument name="id"></argument>
        <argument name="url"></argument>
        <argument name="cc"></argument>
        <argument name="summary"></argument>

        <variable name="summaryFormated" eval="java:java.net.URLDecoder.decode($summary, 'UTF-8')"/>

        <connector type="ShellConnector">
            <parameter name="executable">/bin/sh</parameter>
            <parameter name="arguments">
                <entry eval="property('recomputation.shell')"></entry>
                <entry eval="property('contact.recomputation')"></entry>
                <entry eval="$id"></entry>
                <entry eval="$url"></entry>
                <entry eval="$cc"></entry>
                <entry eval="property('contact.recomputation')"></entry>
                <entry eval="$summaryFormated"></entry>
            </parameter>

        </connector>

    </view>



</views>