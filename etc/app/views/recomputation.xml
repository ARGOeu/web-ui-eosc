<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">
    <!-- 
        Project : argo-eosc 
        File    : recomputation.xml
        Created by cyril on 2019/07/19 
    -->

    <view name="recomputation" authenticators="aai">

        <argument name="tenant">egi</argument>
        <argument name="report">Critical</argument>
        <variable name="api-key" eval="property(concat($tenant,'.api.key'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"/>
        </connector>

        <processors>
            <element in="root">
                <element-create>entry('token',user('token'))</element-create>
                <element-create>view('userInfo', entry('token',user('token')))</element-create>
            </element>

            <element in="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <element in="object">
                    <element in="name"/>
                    <element in="email"/>
                    <element-ignore/>
                </element>
                <element-create>view('tenants.reports')/tenants/tenant[id/text()=$tenant]/report</element-create>
                <element-ignore/>
            </element>
        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
        </renderers>


    </view>

<!--    <view name="recomputation_result">-->

<!--        <argument name="tenant">egi</argument>-->
<!--        <argument name="report">Critical</argument>-->
<!--        <argument name="postData" eval="post()"></argument>-->

<!--        <connector type="XMLConnector">-->
<!--            <parameter name="content" eval="new_element('root',new_element('result',post()))"/>-->
<!--        </connector>-->

<!--        <processors>-->

<!--            <element in="root">-->
<!--                <attribute-create out="tenant">$tenant</attribute-create>-->
<!--                <attribute-create out="report">$report</attribute-create>-->

<!--            </element>-->
<!--        </processors>-->


<!--        <renderers>-->
<!--            <renderer type="DefaultRenderer">-->
<!--                <parameter name="template">app/html/recomputation.html</parameter>-->
<!--            </renderer>-->
<!--            <renderer type="HTMLRenderer">-->
<!--                <parameter name="template">app/html/recomputation.html</parameter>-->
<!--            </renderer>-->
<!--        </renderers>-->


<!--    </view>-->

    <view name="form_recomputation_results"  xmlns:date="http://exslt.org/dates-and-times">

        <argument name="recompId" eval="post()/e:entry[@key='recompId']/text()"/>
        <argument name="key" eval="post()/e:entry[@key='recompId']/text()"/>
        <argument name="mode">RW</argument>
        <argument name="admin">_admin_</argument>


        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view_post('recomputation_RotatingCacheContent',choose(post(false()),post(false()),post()))"/>
            <parameter name="key" eval="choose($key!='_key_'  ,$key,null())"/>
            <parameter name="size">100</parameter>
            <parameter name="mode" eval="$mode"></parameter>
        </connector>

        <processors>
            <element out="root">
                <attribute-create out="tenant">post()/e:entry[@key='tenant']/text()</attribute-create>
                <attribute-create out="report">post()/e:entry[@key='report']/text()</attribute-create>
                <element-create>new_element('result',post())</element-create>

            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="recomputation_results"  xmlns:date="http://exslt.org/dates-and-times">


        <argument name="key"></argument>
        <argument name="mode">R</argument>


        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view('form_recomputation_results')"/>
            <parameter name="key" eval="$key"/>
            <parameter name="size">100</parameter>
            <parameter name="mode" eval="$mode"></parameter>
        </connector>

        <processors>
            <element out="root">
                <attribute-create out="tenant">post()/e:entry[@key='tenant']/text()</attribute-create>
                <attribute-create out="report">post()/e:entry[@key='report']/text()</attribute-create>
                <element-create>new_element('result',post())</element-create>

            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/recomputation.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="recomputation_RotatingCacheContent">

        <connector type="XMLConnector">
            <parameter name="content" eval="post()"></parameter>
        </connector>

        <processors>


            <element  if="not(EmailSent)">
                <element-create>view('recomputation_SendEmail',entry('id',../e:entry[@key='recompId']/text())|entry('url',concat('http://egi.ui.argo.grnet.gr/recompBrowser/',../e:entry[@key='recompId']/text()))|entry('cc',../e:entry[@key='email']/text()))</element-create>
            </element>

        </processors>

    </view>

    <view name="recomputation_SendEmail">

        <argument name="id"></argument>
        <argument name="url"></argument>
        <argument name="cc"></argument>

        <connector type="ShellConnector">
            <parameter name="executable">/bin/sh</parameter>
            <parameter name="arguments">
                <entry eval="property('recomputation.shell')"></entry>
                <entry eval="property('contact.recomputation')"></entry>
                <entry eval="$id"></entry>
                <entry eval="$url"></entry>
                <entry eval="$cc"></entry>
                <entry eval="property('contact.recomputation')"></entry>
            </parameter>

        </connector>

    </view>

</views>