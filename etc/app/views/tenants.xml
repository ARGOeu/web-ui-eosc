<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">
    <!-- 
        Project : argo-eosc 
        File    : tenants.xml
        Created by cyril on 2019/04/16 
    -->
    <view name="reports_tenant" authenticators="admin">

        <argument name="tenant"/>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="property('api.reports')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with tenant: ',$tenant  )))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

<view name="tags" authenticators="admin">
    <variable name="api-key" eval="property('admin.api.key')"/>
    <connector type="HTTPConnector">
        <parameter name="url" eval="property('api.admin.tags')"/>
        <parameter name="force-redirect">true</parameter>
        <parameter name="header">
            <entry key="x-api-key" eval="$api-key"/>
            <entry key="Accept">application/json</entry>
        </parameter>
        <fallback
                eval="new_element('exception',new_attribute('exception',' : exception with admin tags view '))">
            <exception type="java.io.IOException"/>
        </fallback>
    </connector>
    <serializer type="JSONStreamSerializer"/>
</view>

    <view name="tenants" authenticators="admin">
        <variable name="api-key" eval="property('admin.api.key')"/>
        <variable name="url" eval="property('api.tenants')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',' : exception with admin tenant view '))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>
        <serializer type="JSONStreamSerializer"/>
        <processors>
            <element in="object" out="tenants">
                <element-ignore>
                    <!-- @TODO to be removed for prod -->
                    <element in="object" out="tenant">
                        <element in="id" out="uid"/>
                        <element-ignore in="info">
                            <element in="email" out="contact"/>
                            <element in="website" out="url"/>

                            <element-create>new_element('id',lower-case(../name/text()))</element-create>

                            <element/>
                        </element-ignore>
                        <element-ignore in="users">
                            <element-ignore in="object">
                                <element in="api_key"/>
                            </element-ignore>
                        </element-ignore>
                    </element>
                </element-ignore>

            </element>
        </processors>
        <cache type="FileCache">
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">6</parameter>
            </trigger>
            <trigger type="ViewCreatedTrigger"/>
        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="services">
        <connector type="FileConnector">
            <parameter name="path">app/resources/services.xml</parameter>
        </connector>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/resources/services.html</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="listProbes">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('metrics_profile')"/>
        </connector>
    </view>

    <view name="metrics_list">
        <argument name="tenant"/>
        <argument name="report"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('metrics_profile')"/>
        </connector>

        <processors>
            <element in="e:entries">
                <element in="e:entry" if="@tenant=$tenant and upper-case(@report)=upper-case($report)"/>
                <element-ignore/>
            </element>

            <element in="e:entries">
                <element-ignore></element-ignore>
                <element-create>uniq(../e:entry,'@name')</element-create>
            </element>
        </processors>
    </view>


    <view name="metrics_profile" authenticators="admin" xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants.reports.raw',entry('details',true()))"/>
        </connector>

        <processors>
            <element in="root" out="e:entries">
                <elements-ignore path="report/profiles/metrics/object/data/object/services/object/metrics">
                    <element in="item" out="e:entry">
                        <attribute-create out="name">../text()</attribute-create>
                        <attribute-create out="service_flavour">../../../service/text()</attribute-create>
                        <attribute-create out="profile">../../../../../name/text()</attribute-create>
                        <attribute-create out="tenant">ancestor::report/@tenant</attribute-create>
                        <attribute-create out="report">ancestor::report/@report</attribute-create>

                        <text-ignore/>
                    </element>
                </elements-ignore>
            </element>
        </processors>

        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">56</parameter>
            </trigger>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="views">
                    <entry>tenants</entry>
                </parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="tenants.reports.raw" authenticators="admin">

        <argument name="details">_details_</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants')"/>
        </connector>

        <processors>
            <element in="tenants">
                <element in="tenant" >
                    <element-create as="last-child">view('reports_tenant',entry('tenant',../name/text()))</element-create>
                </element>
            </element>

            <elements path="/tenants/tenant">

                <elements-ignore path="object/data">
                    <element in="object" out="report" attributes="info/*">

                        <attribute-create out="tenant">../ancestor::tenant/id/text()</attribute-create>
                        <attribute-create out="tenant_description">../ancestor::tenant/description/text()</attribute-create>
                        <attribute-create out="tenant_url">../ancestor::tenant/url/text()</attribute-create>
                        <attribute-create out="tenant_logo">../ancestor::tenant/image/text()</attribute-create>
                        <attribute-create out="contact">../ancestor::tenant/contact/text()</attribute-create>
                        <attribute-create out="report">../info/name/text()</attribute-create>
                        <attribute-create out="topology1">../topology_schema/group/type/text()</attribute-create>
                        <attribute-create out="topology2">../topology_schema/group/group/type/text()</attribute-create>
                        <attribute-create out="topology3">'services'</attribute-create>
                        <attribute-create out="thresholdAv">../thresholds/availability/text()</attribute-create>
                        <attribute-create out="thresholdRe">../thresholds/reliability/text()</attribute-create>
                        <attribute-create out="thresholdUn">../thresholds/unknown/text()</attribute-create>
                        <attribute-create out="thresholdDw">../thresholds/downtime/text()</attribute-create>

                        <element-create>
                            view('reportTopology',entry('tenant',../ancestor::tenant/id/text())|entry('report',../info/name/text()))/object/data/*
                        </element-create>

                        <element-ignore if="$details='_details_'"/>
                    </element>
                </elements-ignore>
            </elements>

            <element in="tenants" out="root" if="$details!='_details_'">
                <elements-ignore path="tenant">
                    <element in="report">
                        <element in="profiles">
                            <element in="object" out="aggregation" if="type/text()='aggregation'">
                                <element-create>
                                    view('aggregation_profiles',entry('tenant',../ancestor::report/@tenant)|entry('id',../id/text()))
                                </element-create>

                            </element>

                            <element in="object" out="metrics" if="type/text()='metric'">
                                <element-create>
                                    view('metric_profiles',entry('tenant',../ancestor::report/@tenant)|entry('id',../id/text()))
                                </element-create>
                            </element>

                            <element in="object" out="thresholds_profiles" if="type/text()='thresholds'">
                                <element-create>
                                    view('thresholds_profiles',entry('tenant',../ancestor::report/@tenant)|entry('id',../id/text()))
                                </element-create>
                            </element>
                        </element>
                    </element>
                </elements-ignore>
            </element>



        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="tenants.reports" authenticators="admin">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants.reports.raw')"/>
        </connector>

        <processors>
            <element in="tenants">
                <element in="tenant">
                    <attribute-create out="id">../id</attribute-create>
                    <attribute-create out="name">../name</attribute-create>
                    <attribute-create out="contact">../contact</attribute-create>
                    <attribute-create out="description">../description</attribute-create>
                    <attribute-create out="logo">../image</attribute-create>
                    <attribute-create out="url">../url</attribute-create>
                    <element-ignore if="name()!='report'"/>
                </element>
            </element>
        </processors>

        <cache type="FileCache">
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">26</parameter>
            </trigger>
            <trigger type="DependencyRefreshedTrigger">
                <parameter name="views">
                    <entry>tenants</entry>
                </parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"/>
        </cache>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="reportDetailsRaw" authenticators="admin">


        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants.reports.raw',entry('details',true()))"/>
        </connector>

        <cache type="FileCache">

            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">18</parameter>
            </trigger>

         <trigger type="DependencyRefreshedTrigger">
             <parameter name="views">
                 <entry>tenants</entry>
             </parameter>
         </trigger>

            <trigger type="ViewNotifiedTrigger"/>
        </cache>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>


</views>