<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">
    <!-- 
        Project : argo-eosc 
        File    : tenants.xml
        Created by cyril on 2019/04/16 
    -->
    <view name="reports_tenant" authenticators="admin">

        <argument name="tenant"/>


        <variable name="api-key" eval="property(concat($tenant,'.api.key'))"/>
        <variable name="url" eval="property('api.reports')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with tenant: ',$tenant)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>
    </view>

    <view name="tenants" authenticators="admin">

        <variable name="api-key" eval="property('admin.api.key')"/>
        <variable name="url" eval="property('api.tenants')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
            <fallback
                    eval="new_element('exception',new_attribute('exception',concat('exception with tenant: ',$tenant)))">
                <exception type="java.io.IOException"/>
            </fallback>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <processors>
            <element in="object" out="tenants">
                <element-ignore>
                    <!-- @TODO to be removed for prod -->
                    <element in="object" out="tenant" if="lower-case(info/name/text())='egi' or lower-case(info/name/text())='eudat' ">
                        <element in="id" out="uid"/>
                        <element-ignore in="info">
                            <element in="email" out="contact"/>
                            <element in="website" out="url"/>


                            <element-create>new_element('id',lower-case(../name/text()))</element-create>
                            <element-create if="not(description)">new_element('description',../name/text())</element-create>
                            <element-create if="not(thresholdAv)">new_element('thresholdAv',85)</element-create>
                            <element-create if="not(thresholdRe)">new_element('thresholdRe',90)</element-create>
                            <element/>
                        </element-ignore>
                    </element>
                </element-ignore>

            </element>
        </processors>

        <cache type="FileCache">
            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">36</parameter>
            </trigger>
        </cache>
    </view>


    <view name="services">
        <connector type="FileConnector">
            <parameter name="path">app/resources/services.xml</parameter>
        </connector>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/resources/services.html</parameter>
            </renderer>
        </renderers>


    </view>

<!--
    <view name="tenantsListRaw" authenticators="admin">

        <connector type="FileConnector">
            <parameter name="path">app/resources/tenants.xml</parameter>
        </connector>


        <cache type="FileCache">

            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">3</parameter>
            </trigger>

            <trigger type="ViewCreatedTrigger"/>

            <trigger type="ViewNotifiedTrigger"/>
        </cache>
    </view>

    <view name="tenantsList" authenticators="admin">

        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenantsListRaw')"/>
        </connector>


        <processors>
            <elements path="tenants/tenant">
                <element-ignore in="api_key"/>
                <element in="name">
                    <text>lower-case(.)</text>
                </element>
            </elements>
        </processors>

    </view>
-->
    <view name="tenants.reports" authenticators="admin">

<!--
        <connector type="FileConnector">
            <parameter name="path">app/resources/tenants_reports.xml</parameter>
        </connector>
-->
        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants')"/>
        </connector>

        <processors>
            <element in="tenants">
                <element in="tenant" >
                    <element-create as="last-child">view('reports_tenant',entry('tenant',lower-case(../name/text())))</element-create>
                </element>

            </element>

            <elements path="/tenants/tenant">


                <elements-ignore path="object/data">
                    <element in="object" out="report" attributes="info/*">
                        <attribute-create out="tenant">../ancestor::tenant/id/text()</attribute-create>
                        <attribute-create out="contact">../ancestor::tenant/contact/text()</attribute-create>
                        <attribute-create out="report">../info/name/text()</attribute-create>
                        <attribute-create out="topology1">../topology_schema/group/type/text()</attribute-create>
                        <attribute-create out="topology2">../topology_schema/group/group/type/text()</attribute-create>
                        <attribute-create out="topology3">'services'</attribute-create>
                        <attribute-create out="thresholdAv">../ancestor::tenant/thresholdAv/text()</attribute-create>
                        <attribute-create out="thresholdRe">../ancestor::tenant/thresholdRe/text()</attribute-create>
                        <element-create>
                            view('reportTopology',entry('tenant',../ancestor::tenant/id/text())|entry('report',../info/name/text()))/object/data/*
                        </element-create>
                        <element-ignore/>
                    </element>
                </elements-ignore>
            </elements>


        </processors>


        <cache type="FileCache">


            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">2</parameter>
            </trigger>

            <trigger type="ViewCreatedTrigger"/>

            <trigger type="ViewNotifiedTrigger"/>
        </cache>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="contentType">text/xml</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="reportDetailsRaw" authenticators="admin">


        <connector type="FileConnector">
            <parameter name="path">app/resources/tenants_reports.xml</parameter>
        </connector>

        <processors>
            <element in="tenants">
                <element in="tenant" if="contains(@env,property('app.instance'))">
                    <element-create as="last-child">view('reports_tenant',entry('tenant',../id/text()))</element-create>
                </element>

            </element>
            <elements path="/tenants/tenant">
                <elements path="object/data">
                    <element in="object" out="report" attributes="info/*">
                        <attribute-create out="tenant">../ancestor::tenant/id/text()</attribute-create>
                        <attribute-create out="contact">../ancestor::tenant/contact/text()</attribute-create>
                        <attribute-create out="report">../info/name/text()</attribute-create>
                        <attribute-create out="topology1">../topology_schema/group/type/text()</attribute-create>
                        <attribute-create out="topology2">../topology_schema/group/group/type/text()</attribute-create>
                        <attribute-create out="topology3">'services'</attribute-create>
                        <attribute-create out="thresholdAv">../ancestor::tenant/thresholdAv/text()</attribute-create>
                        <attribute-create out="thresholdRe">../ancestor::tenant/thresholdRe/text()</attribute-create>
                        <element-create>
                            view('reportTopology',entry('tenant',../ancestor::tenant/id/text())|entry('report',../info/name/text()))/object/data/*
                        </element-create>
                    </element>
                </elements>
            </elements>

            <element in="tenants" out="root">
                <elements-ignore path="tenant/object/data">
                    <element in="report">
                        <element in="profiles">
                            <element in="object" out="aggregation" if="type/text()='aggregation'">
                                <element-create>
                                    view('aggregation_profiles',entry('tenant',../ancestor::report/@tenant)|entry('id',../id/text()))
                                </element-create>

                            </element>

                            <element in="object" out="metrics" if="type/text()='metric'">
                                <element-create>
                                    view('metric_profiles',entry('tenant',../ancestor::report/@tenant)|entry('id',../id/text()))
                                </element-create>
                            </element>
                        </element>
                    </element>
                </elements-ignore>
            </element>


        </processors>


        <cache type="FileCache">

            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">2</parameter>
            </trigger>

            <trigger type="ViewCreatedTrigger"/>

            <trigger type="ViewNotifiedTrigger"/>
        </cache>


    </view>


</views>