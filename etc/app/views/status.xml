<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd">
    <!-- 
        Project : argo-eosc 
        File    : status.xml.xml
        Created by cyril on 2018/06/13 
    -->


    <view name="api-status-last" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology">SITES</argument>
        <argument name="last">500</argument>

        <argument name="entity">_entity_</argument>
        <argument name="scope">_scope_</argument>
        <argument name="status">_status_</argument>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="filter" eval="choose($status!='_status_',$status,'all')"/>


        <connector type="HTTPConnector">
            <parameter name="url"
                       eval="choose($entity='_entity_',concat(property('api.status.last'),'/',$report,'/',$topology,'?strict=true&amp;limit=',$last,'&amp;filter=',$filter),concat(property('api.status.last'),'/',$report,'/',$topology,'/',$entity,'?strict=true&amp;limit=',$last,'&amp;filter=',$filter))"/>

            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <processors>

            <element in="object" out="status-last">
                <element-ignore in="data">
                    <element-ignore in="metric_data">
                        <element/>
                    </element-ignore>

                </element-ignore>
                <element-ignore/>
            </element>


            <element out="status-last">
                <attribute-create out="Ok">count(../object[status/text()='OK'])</attribute-create>
                <attribute-create out="Warning">count(../object[status/text()='WARNING'])</attribute-create>
                <attribute-create out="Unknown">count(../object[status/text()='UNKNOWN'])</attribute-create>
                <attribute-create out="Critical">count(../object[status/text()='CRITICAL'])</attribute-create>
                <attribute-create out="Missing">count(../object[status/text()='MISSING'])</attribute-create>

                <element in="object">
                    <attribute-create out="id">concat('status_',count(../preceding-sibling::object))</attribute-create>
                </element>
            </element>

        </processors>
    </view>


    <view name="report-status-eudat" authenticators="eudat">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('report-status',arguments())"/>
        </connector>
        <renderers>

            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/status.html</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="report-status" xmlns:function="http://software.in2p3.fr/lavoisier/functions.xsd"
          xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="topology">SITES</argument>

        <argument name="entity1">_entity_</argument>
        <argument name="entity2">_entity_</argument>
        <argument name="entity3">_entity_</argument>
        <argument name="entity4">_entity_</argument>

        <argument name="nbdays">5</argument>
        <argument name="site">_site_</argument>

        <argument name="start_date">_start_</argument>
        <argument name="end_date">_end_</argument>
        <argument name="filter">_filter_</argument>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="start_time"
                  eval="choose($start_date='_start_',concat(str:replace(substring(date:add(function:date-UTC(),concat('-P',$nbdays,'D')),0,20),' ','T'),'Z'),concat($start_date,'T00:00:00Z'))"/>
    <!--
        <variable name="end_time"
                  eval="choose($end_date='_end_',concat(str:replace(substring(function:date-UTC(),0,20),' ','T'),'Z'),concat($end_date,'T23:59:59Z'))"/>-->
        <variable name="end_time"
                  eval="choose($end_date='_end_' or( date:seconds(function:date-UTC()) &lt;= date:seconds($end_date)) ,concat(str:replace(substring(function:date-UTC(),0,20),' ','T'),'Z'),concat($end_date,'T23:59:59Z'))"/>

        <variable name="diff"
                  eval="choose($entity3!='_entity_',date:seconds(date:difference($start_time,$end_time)),0)"/>
        <variable name="url"
                  eval="choose($diff &lt;= 432000,function:buildApiStatusUrl($report,$topology,$entity1,$entity2,$entity3,$entity4,$start_time,$end_time),function:buildApiStatusUrl($report,$topology,$entity1,$entity2,$entity3,$entity4,concat(str:replace(substring(date:add(function:date-UTC(),'-P3D'),0,20),' ','T'),'Z'),$end_time))"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>

       <serializer type="JSONStreamSerializer"/>

        <processors>

            <element>
                <attribute-create out="urlApi">$url</attribute-create>
            </element>


            <element in="object" out="root" if="groups/object/statuses">
                <attribute-create out="urlApi">$url</attribute-create>
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='statuses'"/>
                        <element-ignore in="statuses">
                            <element in="object" out="status">
                                <attribute from-element="true"/>
                                <element-ignore/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>





            <element in="object" out="root" if="groups/object/services/object/statuses">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='statuses'"/>
                                <element-ignore in="statuses">
                                <element in="object" out="status">
                                    <attribute from-element="true"/>
                                    <element-ignore/>
                                </element>
                                <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="groups/object/services/object/endpoints/object/statuses">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='endpoints'"/>
                                <element-ignore in="endpoints">

                                    <element in="object" out="endpoint">
                                        <attribute from-element="true" if="name()!='statuses'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="statuses">
                                            <element in="object" out="status">
                                                <attribute from-element="true"/>
                                                <element-ignore/>
                                            </element>
                                            <element-ignore/>
                                        </element-ignore>
                                    </element>
                                    <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="groups/object/services/object/endpoints/object/metrics">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='endpoints'"/>
                                <element-ignore in="endpoints">

                                    <element in="object" out="endpoint">
                                        <attribute from-element="true" if="name()!='metrics'"/>

                                        <element-ignore in="metrics">
                                            <element in="object" out="metric">
                                                <attribute from-element="true" if="name()!='statuses'"/>
                                                <element-ignore in="statuses">
                                                    <element in="object" out="status">
                                                        <attribute from-element="true"/>
                                                        <element-ignore/>
                                                    </element>
                                                    <element-ignore/>
                                                </element-ignore>

                                            </element>

                                        </element-ignore>

                                    </element>
                                    <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>



            <element in="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <attribute-create out="topology">$topology</attribute-create>
                <attribute-create out="url">$url</attribute-create>
                <attribute-create out="link">
                    function:buildStatusLink($report,$topology,str:replace($entity1,'+','%252B'),str:replace($entity2,'+','%252B'),str:replace($entity3,'+','%252B'),$entity4,$start_time,$end_time)
                </attribute-create>


                <attribute-create out="entity1">str:replace($entity1,'+','%252B')</attribute-create>
                <attribute-create out="entity2">str:replace($entity2,'+','%252B')</attribute-create>
                <attribute-create out="entity3">str:replace($entity3,'+','%252B')</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>
                <attribute-create out="filter">$filter</attribute-create>
                <attribute-create out="message" if="$diff &gt; 432000">'Your query generates too much data. We have limited the results to the end date day (when available). Please limit the period to 5 days'
                </attribute-create>
                <attribute-create out="start_date" if="$start_date!='_start_'">$start_date</attribute-create>
                <attribute-create out="end_date" if="$end_date!='_end_'">$end_date</attribute-create>

                <attribute-create out="start_date_0" if="$start_date!='_start_'">
                    substring(date:add($start_date,concat('-P',1,'D')),0,11)
                </attribute-create>
                <attribute-create out="end_date_0" if="$end_date!='_end_'">
                    substring(date:add($end_date,concat('-P',1,'D')),0,11)
                </attribute-create>

                <attribute-create out="start_date_0" if="$start_date='_start_'">
                    substring(date:add($start_time,concat('-P',1,'D')),0,11)
                </attribute-create>
                <attribute-create out="end_date_0" if="$end_date='_end_'">
                    substring(date:add($end_time,concat('-P',1,'D')),0,11)
                </attribute-create>


                <attribute-create out="start_date_1" if="$start_date!='_start_'">
                    substring(date:add($start_date,concat('P',1,'D')),0,11)
                </attribute-create>
                <attribute-create out="end_date_1"
                                  if="$end_date!='_end_' and date:seconds(date:difference(function:date-UTC(),date:add($end_date,concat('P',1,'D'))))&lt;=0">
                    substring(date:add($end_date,concat('P',1,'D')),0,11)
                </attribute-create>

                <attribute-create out="start_date_1" if="$start_date='_start_'">
                    substring(date:add($start_time,concat('P',1,'D')),0,11)
                </attribute-create>
                <attribute-create out="end_date_1"
                                  if="$end_date='_end_' and date:seconds(date:difference(function:date-UTC(),date:add($end_time,concat('P',1,'D'))))&lt;0">
                    substring(date:add($end_time,concat('P',1,'D')),0,11)
                </attribute-create>


                <element-create>view('gocdb.filter')</element-create>
                <element-create>view('tenants.reports')/tenants/tenant/report</element-create>
                <element-ignore if="group">
                    <element-ignore if="endpoint">
                        <element-ignore if="metric">
                            <element out="group"/>
                        </element-ignore>
                        <element out="group"/>
                    </element-ignore>
                    <element out="group"/>
                </element-ignore>

            </element>


            <elements path="root">

                <element-ignore in="group"/>
                <element-create>
                    sort_by_string(../group,'@name')
                </element-create>
            </elements>

            <elements path="root">
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group"/>
                </element-create-as-parent>
            </elements>

            <elements path="root/group">
                <element-ignore in="group">
                    <element/>
                </element-ignore>
            </elements>

            <elements path="root/group">
                <element-ignore in="status"/>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>


            <element in="root" if="$tenant='egi'">
                <set variable="listSites">view('gocdb.site')</set>

                <element in="group" if="@type='SITES' and $filter!='_filter_'">
                    <attribute-create out="filters">
                        choose($listSites/results/SITE[@NAME=current()/../@name]/@filters,$listSites/results/SITE[@NAME=current()/../@name]/@filters,'NA')
                    </attribute-create>
                </element>

            </element>

            <element in="root" if="$tenant='egi' and $filter!='_filter_'">
                <element-ignore in="group" if="not(contains(@filters,concat(',',$filter,',')))"/>
            </element>
            

            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <element in="group">
                    <attribute in="name">str:replace(.,'+','%252B')</attribute>

                    <element in="status">

                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()
                        </attribute-create>

                        <attribute-create out="end_time" if="current()/../following-sibling::status[1]">
                            current()/../following-sibling::status[1]/@timestamp
                        </attribute-create>

                        <attribute-create out="end_time" if="not(current()/../following-sibling::status[1])">
                           choose(date:seconds(date:difference(date:add(../@timestamp,concat('P',1,'D')),function:date-UTC())) &gt;0 , ../@timestamp, date:add(../@timestamp,concat('PT',10,'M')))
                        </attribute-create>

                    </element>
                </element>
            </element>







        </processors>

        <pre-renderers>
            <row foreach="/root/group/status">
                <column label="name">ancestor::group/@name</column>
                <column label="timestamp">@timestamp</column>
                <column label="status">@value</column>
                <column label="end_time">@end_time</column>
            </row>
        </pre-renderers>

        <renderers>

            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/status.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="missing">
        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('object')"/>
        </connector>

        <processors>
            <element in="object">
                <attribute-create out="missing">true()</attribute-create>
            </element>
        </processors>

    </view>

    <view name="report-metrics" xmlns:function="http://software.in2p3.fr/lavoisier/functions.xsd"
          xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

        <argument name="report">Critical</argument>
        <argument name="tenant">egi</argument>
        <argument name="endpoint">SITES</argument>
        <argument name="metric_name">_entity_</argument>
        <argument name="exec_time"/>
        <argument name="status"/>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="choose($status!='MISSING',concat(property('api.metrics'),'/',$endpoint,'/',$metric_name,'?exec_time=',$exec_time),'http://localhost:8080/lavoisier/missing?accept=json')"/>

        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>
      <serializer type="JSONStreamSerializer"/>



        <processors>


            <element in="object" out="root">
                <elements-ignore path="root">
                    <element in="object" out="host">
                        <attribute-create out="name">../Name/text()</attribute-create>

                    <element in="Metrics" out="metric">
                        <attribute-create out="name">../object/Name/text()</attribute-create>
                        <elements-ignore path="object/Details">
                            <element in="object" out="status">
                                <attribute-create out="timestamp">../Timestamp/text()</attribute-create>
                                <attribute-create out="value">../Value/text()</attribute-create>
                                <attribute-create out="class" if="upper-case(../Value/text())='OK'">'success'</attribute-create>
                                <attribute-create out="class" if="upper-case(../Value/text())='CRITICAL'">'danger'</attribute-create>
                                <attribute-create out="class" if="upper-case(../Value/text())='MISSING'">'info'</attribute-create>
                                <attribute-create out="class" if="upper-case(../Value/text())='WARNING'">'warning'</attribute-create>

                                <attribute-create out="class" if="upper-case(../Value/text())='UNKNOWN'">'default'</attribute-create>

                                <element in="Message" out="message"/>
                                <element in="Summary" out="summary"/>
                                <element-ignore/>
                            </element>

                            <element-ignore/>
                        </elements-ignore>
                    </element>

                    </element>
                    <element-ignore/>
                </elements-ignore>
            </element>


            <element in="root">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>
                <element-create>view('tenants.reports')/tenants/tenant/report</element-create>
            </element>
        </processors>

        <renderers>

            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/metric.html</parameter>
            </renderer>
        </renderers>

    </view>


</views>