<views xmlns="http://software.in2p3.fr/lavoisier/application.xsd"
       xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" xmlns:t="http://software.in2p3.fr/lavoisier/tables.xsd">

    <view name="myDashboard" xmlns:function="http://software.in2p3.fr/lavoisier/functions.xsd" xmlns:date="http://exslt.org/dates-and-times">
        <argument name="tenant">egi</argument>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('tenants.reports')"/>
        </connector>

        <processors>
            <element in="tenants">
                <element-ignore in="tenant" if="@id!=$tenant"/>
            </element>
        </processors>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/mydashboard.html</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="results" xmlns:function="http://software.in2p3.fr/lavoisier/functions.xsd" xmlns:date="http://exslt.org/dates-and-times">
        <argument name="tenant"/>
        <argument name="report"/>
        <argument name="start_date"/>
        <argument name="end_date"/>
        <argument name="group_type"/>
        <argument name="group_name"/>
        <argument name="type_results"/>
        <argument name="format_results"/>
        <argument name="av_threshold">90</argument>
        <argument name="re_threshold">95</argument>
        <argument name="topology1"/>
        <argument name="topology2"/>


        <variable name="uniqueId" eval="date:seconds()"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view($type_results,arguments())"/>
        </connector>

        <processors>
            <element in="results">
                <attribute-create out="tenant">$tenant</attribute-create>
                <attribute-create out="report">$report</attribute-create>

                <attribute-create out="start_date">$start_date</attribute-create>
                <attribute-create out="end_date">$end_date</attribute-create>

                <attribute-create out="group_type">$group_type</attribute-create>
                <attribute-create out="group_name">$group_name</attribute-create>

                <attribute-create out="type_results">$type_results</attribute-create>
                <attribute-create out="format_results">$format_results</attribute-create>

                <attribute-create out="av_threshold">$av_threshold</attribute-create>
                <attribute-create out="re_threshold">$re_threshold</attribute-create>
                <attribute-create out="uniqueId">$uniqueId</attribute-create>
                <attribute-create out="topology1">$topology1</attribute-create>
                <attribute-create out="topology2">$topology2</attribute-create>

            </element>
        </processors>

        <renderers>
            <renderer type="HTMLRenderer">
                <parameter name="template">app/html/card.html</parameter>
            </renderer>
        </renderers>
    </view>


    <view name="buildUrlStatus">
        <argument name="group_type"/>
        <argument name="group_name"/>
        <argument name="report"/>
        <argument name="topology1"/>
        <argument name="topology2"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"/>
        </connector>

        <processors>
            <element in="root" attributes="arguments()">
                <element-create if="$group_type=$topology1">new_element('baseurl',new_text(concat(property('api.status'),'/',$report,'/',$topology2)))</element-create>
                <element-create if="$group_type=$topology2">new_element('baseurl',new_text(concat(property('api.status'),'/',$report,'/',$topology2,'/',$group_name)))</element-create>
                <element-create if="$group_type='services'">new_element('baseurl',new_text(concat(property('api.status'),'/',$report,'/',$topology2,'/',$group_name,'/services')))</element-create>
                <element-create if="$group_type='endpoints'">new_element('baseurl',new_text(concat(property('api.status'),'/',$report,'/',$group_name,'/endpoints')))</element-create>
            </element>
        </processors>

    </view>

    <view name="dash_status" xmlns:function="http://software.in2p3.fr/lavoisier/functions.xsd"  xmlns:m="http://exslt.org/math" xmlns:date="http://exslt.org/dates-and-times" xmlns:str="http://exslt.org/strings">
        <argument name="tenant"/>
        <argument name="report"/>
        <argument name="start_date"/>
        <argument name="end_date"/>
        <argument name="group_type"/>
        <argument name="group_name"/>
        <argument name="format_results"/>
        <argument name="topology1"/>
        <argument name="topology2"/>


        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="baseUrl" eval="view('buildUrlStatus',arguments())/root/baseurl/text()"/>
        <variable name="url" eval="concat($baseUrl,'?start_time=',$start_date,'&amp;end_time=',$end_date)"/>
        <variable name="longueur">100</variable>



    <connector type="HTTPConnector">
        <parameter name="url" eval="$url"/>
        <parameter name="force-redirect">true</parameter>
        <parameter name="header">
            <entry key="x-api-key" eval="$api-key"/>
            <entry key="Accept">application/json</entry>
        </parameter>
    </connector>
        <serializer type="JSONStreamSerializer"/>

        <processors>



            <element in="object" out="root" if="groups/object/statuses">
                <attribute-create out="urlApi">$url</attribute-create>
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='statuses'"/>
                        <element-ignore in="statuses">
                            <element in="object" out="status">
                                <attribute from-element="true"/>
                                <element-ignore/>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>


            <element in="object" out="root" if="groups/object/services/object/statuses">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='statuses'"/>
                                <element-ignore in="statuses">
                                    <element in="object" out="status">
                                        <attribute from-element="true"/>
                                        <element-ignore/>
                                    </element>
                                    <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="groups/object/services/object/endpoints/object/statuses">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='endpoints'"/>
                                <element-ignore in="endpoints">

                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='statuses'"/>
                                        <attribute-create out="url" if="../info/URL">../info/URL/text()</attribute-create>

                                        <element-ignore in="statuses">
                                            <element in="object" out="status">
                                                <attribute from-element="true"/>
                                                <element-ignore/>
                                            </element>
                                            <element-ignore/>
                                        </element-ignore>
                                    </element>
                                    <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="object" out="root" if="groups/object/services/object/endpoints/object/metrics">
                <element-ignore in="groups">
                    <element in="object" out="group">
                        <attribute from-element="true" if="name()!='services'"/>
                        <element-ignore in="services">
                            <element in="object" out="group">
                                <attribute from-element="true" if="name()!='endpoints'"/>
                                <element-ignore in="endpoints">

                                    <element in="object" out="group">
                                        <attribute from-element="true" if="name()!='metrics'"/>

                                        <element-ignore in="metrics">
                                            <element in="object" out="metric">
                                                <attribute from-element="true" if="name()!='statuses'"/>
                                                <element-ignore in="statuses">
                                                    <element in="object" out="status">
                                                        <attribute from-element="true"/>
                                                        <element-ignore/>
                                                    </element>
                                                    <element-ignore/>
                                                </element-ignore>

                                            </element>

                                        </element-ignore>

                                    </element>
                                    <element-ignore/>
                                </element-ignore>
                            </element>
                        </element-ignore>
                        <element-ignore/>
                    </element>
                </element-ignore>
            </element>

            <element in="root" if="$group_type='NGI'">
                <set variable="indexSite">view('gocdb.site')/results/SITE</set>
                <element if="$indexSite[@NAME=current()/@name]/ROC/text()=$group_name" in="group">
                    <attribute-create out="group1">$group_name</attribute-create>
                </element>
                <element-ignore/>
            </element>

            <element in="root" if="$group_type='PROJECT'">
                <element in="group">
                    <attribute-create out="group1">$group_name</attribute-create>
                </element>
                <element-ignore/>
            </element>

            <element in="root">
                <element-ignore in="group" if="count(group)>0">
                    <element in="group" if="count(group)=0">
                        <attribute-create out="group1">ancestor::group/@name</attribute-create>
                    </element>
                    <element-ignore in="group" if="count(group)>0">
                        <element in="group">
                        <attribute-create out="group1">ancestor::group/@name</attribute-create>
                        </element>
                    </element-ignore>
                </element-ignore>
            </element>

            <element in="root">
                <element-ignore in="group"/>
                <element-create>sort_by_string(../group,'@name')</element-create>
            </element>

            <element in="root">
                <element-create-as-parent out="group" attributes="@*" group-by="@name">
                    <element in="group"/>
                </element-create-as-parent>
            </element>

            <element in="root">
                <element in="group">
                    <element-ignore in="group">
                        <element/>
                    </element-ignore>
                </element>
            </element>

            <elements path="root/group">
                <element in="status">
                    <attribute-create out="end_time" if="current()/../following-sibling::status[1]">
                        current()/../following-sibling::status[1]/@timestamp
                    </attribute-create>

                    <attribute-create out="last_time" if="not(current()/../following-sibling::status[1])">
                        choose(date:seconds(date:difference(date:add(../@timestamp,concat('P',1,'D')),function:date-UTC())) &gt;0 , ../@timestamp, date:add(../@timestamp,concat('PT',10,'M')))
                    </attribute-create>
                </element>
            </elements>

            <elements path="root/group">
                <element in="status">
                    <attribute-create out="duration" if="../@end_time">
                        m:abs( date:seconds(../@end_time)-date:seconds(../@timestamp))
                    </attribute-create>
                    <attribute-create out="duration" if="../@last_time">
                        m:abs(date:seconds(../@last_time)-date:seconds(../@timestamp))
                    </attribute-create>
                    <attribute-create out="last" if="../@last_time">
                        m:abs(date:seconds(current()/../@timestamp)-date:seconds(current()/../../status[1]/@timestamp))
                    </attribute-create>
                </element>
            </elements>

            <elements path="root/group">
                <attribute-create out="status">../status[not(following-sibling::status)]/@value</attribute-create>
                <element in="status">
                    <attribute in="duration">round($longueur * number(.) div current()/../../status/@last)</attribute>
                    <attribute-create out="color" if="../@value='OK'">'#28a745'</attribute-create>
                    <attribute-create out="color" if="../@value='CRITICAL'">'#dc3545'</attribute-create>
                    <attribute-create out="color" if="../@value='WARNING'">'#ffc107'</attribute-create>
                    <attribute-create out="color" if="../@value='MISSING'">'#343a40'</attribute-create>
                    <attribute-create out="color" if="../@value='DOWNTIME'">'#17a2b8'</attribute-create>
                    <attribute-create out="color" if="../@value='UNKNOWN'">'#f8f9fa'</attribute-create>

                    <attribute-create out="stroke" if="../@value='OK'">'#28a745'</attribute-create>
                    <attribute-create out="stroke" if="../@value='CRITICAL'">'#dc3545'</attribute-create>
                    <attribute-create out="stroke" if="../@value='WARNING'">'#ffc107'</attribute-create>
                    <attribute-create out="stroke" if="../@value='MISSING'">'#343a40'</attribute-create>
                    <attribute-create out="stroke" if="../@value='DOWNTIME'">'#17a2b8'</attribute-create>
                    <attribute-create out="stroke" if="../@value='UNKNOWN'">'black'</attribute-create>

                </element>
            </elements>

            <elements path="root/group">
                <element in="status">
                    <attribute-create out="position">sum(current()/../preceding-sibling::status/@duration)</attribute-create>
                </element>
            </elements>

            <element in="root" out="results">
                <attribute-create out="longueur">$longueur</attribute-create>
                <attribute-create out="url">$url</attribute-create>
            </element>

        </processors>
    </view>


    <view name="dash_avre">
        <argument name="tenant"/>
        <argument name="report"/>
        <argument name="start_date"/>
        <argument name="end_date"/>
        <argument name="group_type"/>
        <argument name="group_name"/>
        <argument name="format_results"/>

        <variable name="api-key" eval="view('tenants')/tenants/tenant[name/text()=upper-case($tenant)]/api_key/text()"/>
        <variable name="url" eval="choose($group_name!='ALL',concat(property('api.report'),'/',$report,'/',$group_type,'/',$group_name,'?start_time=',$start_date,'&amp;end_time=',$end_date),concat(property('api.report'),'/',$report,'/',$group_type,'?start_time=',$start_date,'&amp;end_time=',$end_date))"/>


        <connector type="HTTPConnector">
            <parameter name="url" eval="$url"/>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="$api-key"/>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>

        <serializer type="JSONStreamSerializer"/>

        <processors>
            <element in="object" out="results" if="$group_type='NGI' or $group_type='PROJECT'" attributes="new_attribute('name',$group_name)|new_attribute('type',$group_type)">
                <element-create as="first-child">new_attribute($group_type,$group_name)</element-create>
                <elements-ignore path="results/object">
                    <element in="results" out="ars">
                        <element in="object" out="ar">
                            <element if="name()!='timestamp'">
                                <text>round(. * 100 ) div 100</text>
                            </element>
                        </element>
                    </element>
                </elements-ignore>
            </element>

            <element in="object" out="results" if="$group_type='SITES' or $group_type='SERVICEGROUPS'" attributes="new_attribute('name',$group_name)|new_attribute('type',$group_type)">

                <elements-ignore path="results/object/endpoints/object">
                    <element in="results" out="ars">
                        <element in="object" out="ar">
                            <element if="name()!='timestamp'">
                                <text>round(. * 100 ) div 100</text>
                            </element>
                        </element>
                    </element>
                </elements-ignore>
            </element>

        </processors>

    </view>


</views>